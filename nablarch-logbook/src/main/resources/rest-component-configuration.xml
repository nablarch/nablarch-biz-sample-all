<?xml version="1.0" encoding="UTF-8"?>

<component-configuration
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://tis.co.jp/nablarch/component-configuration"
    xsi:schemaLocation="http://tis.co.jp/nablarch/component-configuration  https://nablarch.github.io/schema/component-configuration.xsd">

  <!-- テーブル定義 -->
  <import file="nablarch/schema-config.xml" />

  <!-- コード機能 -->
  <import file="nablarch/common/code.xml"/>

  <!-- メッセージ機能の設定 -->
  <import file="nablarch/core/message-by-property-files.xml"/>

  <!-- 精査に使用する文字集合定義 -->
  <import file="nablarch/core/validation/charset-definition.xml" />

  <!-- DomainManager 実装クラス設定 -->
  <component name="domainManager" class="com.example.domain.SampleDomainManager"/>

  <!-- BeanValidation実装クラス -->
  <component name="validationStrategy" class="nablarch.common.web.validator.BeanValidationStrategy" />

  <!-- 環境設定ファイル -->
  <config-file file="common.properties"/>
  <config-file file="env.properties"/>

  <!-- データベース設定 -->
  <!--
  下記設定ファイルを使用することで、JNDIを用いてコネクションがルックアップされる
  ルックアップに使用する名前は、configファイル中で、「nablarch.connectionFactory.jndiResourceName」というプレースホルダーに設定する。

  ローカルのデータソースからコネクションを取得したい場合は、アーキタイプから生成した直後のプロジェクトに含まれるdb-for-webui_dev.xmlを参考に設定すること。
  -->
  <import file="nablarch/webui/db-for-webui.xml"/>

  <!-- スレッドコンテキストハンドラ -->
  <import file="nablarch/webui/threadcontext-for-webui.xml"/>


  <!--パッケージマッピングの設定 -->
  <component name="packageMapping" class="nablarch.integration.router.PathOptionsProviderRoutesMapping">
    <property name="pathOptionsProvider">
      <component class="nablarch.integration.router.jaxrs.JaxRsPathOptionsProvider">
        <property name="applicationPath" value="${nablarch.webApi.applicationPath}"/>
        <property name="basePackage" value="${nablarch.commonProperty.basePackage}"/>
      </component>
    </property>
    <property name="methodBinderFactory">
      <component class="nablarch.fw.jaxrs.JaxRsMethodBinderFactory">
        <property name="handlerList">
          <component class="nablarch.integration.jaxrs.jersey.JerseyJaxRsHandlerListFactory"/>
        </property>
      </component>
    </property>
  </component>

  <!-- ダイアレクト設定 -->
  <!-- TODO:使用するDBに合わせてダイアレクトを設定すること -->
  <component name="dialect" class="nablarch.core.db.dialect.H2Dialect" />


  <!-- ハンドラキュー構成 -->
  <component name="webFrontController" class="nablarch.fw.web.servlet.WebFrontController">
    <property name="handlerQueue">
      <list>
        <component class="nablarch.fw.web.handler.HttpCharacterEncodingHandler"/>

        <component class="nablarch.common.handler.threadcontext.ThreadContextClearHandler"/>

        <component class="nablarch.fw.handler.GlobalErrorHandler"/>

        <component class="nablarch.fw.jaxrs.JaxRsResponseHandler" >
          <property name="responseFinishers">
            <list>
              <component class="nablarch.fw.jaxrs.AdoptHandlerResponseFinisher">
                <property name="handler">
                  <component class="nablarch.fw.web.handler.SecureHandler">
                    <property name="secureResponseHeaderList">
                      <list>
                        <component class="nablarch.fw.web.handler.secure.ContentTypeOptionsHeader" />
                        <component class="nablarch.fw.web.handler.secure.ReferrerPolicyHeader" />
                        <component class="nablarch.fw.web.handler.secure.CacheControlHeader" />
                      </list>
                    </property>
                  </component>
                </property>
              </component>
            </list>
          </property>
        </component>

        <component-ref name="threadContextHandler"/>

        <component class="nablarch.fw.jaxrs.JaxRsAccessLogHandler"/>

        <component-ref name="dbConnectionManagementHandler"/>

        <component-ref name="transactionManagementHandler"/>

        <component-ref name="packageMapping"/>
      </list>
    </property>
  </component>

  <!-- 初期化が必要なコンポーネント -->
  <component name="initializer" class="nablarch.core.repository.initialization.BasicApplicationInitializer">
    <property name="initializeList">
      <list>
        <!-- パッケージマッピング -->
        <component-ref name="packageMapping" />
        <!-- コードのローダ -->
        <component-ref name="codeLoader" />
        <!-- コードのキャッシュ -->
        <component-ref name="codeCache" />
        <!-- リソースのキャッシュ -->
        <component-ref name="stringResourceCache" />
      </list>
    </property>
  </component>

</component-configuration>
