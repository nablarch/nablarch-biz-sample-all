// -*- mode: groovy; coding: utf-8-unix -*-


group = 'com.nablarch.applib'
version = '1.0.1'
description = '業務サンプル'

repositories {
  mavenLocal()
  maven { url "${developLibUrl}" }
  jcenter()

  // サードパーティ製ライブラリの格納リポジトリ
  if(project.hasProperty('nablarchExtRepoUrl')) {
     maven { url "${nablarchExtRepoUrl}" }
  }
}

buildscript {
  repositories {
    mavenLocal()
    maven { url "${developLibUrl}" }
    jcenter()
  }
  dependencies {
    classpath "com.nablarch.dev:nablarch-gradle-plugin:${nablarchGradlePluginVersion}"
    classpath "net.saliman:gradle-cobertura-plugin:2.2.3"
    classpath "io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE"
  }
}
apply plugin: "io.spring.dependency-management"

dependencyManagement {
  imports {
    mavenBom 'com.nablarch.profile:nablarch-bom:5u9'
  }
  applyMavenExclusions false
}

apply {
  plugin 'com.nablarch.dev.nablarch-build'
  plugin 'com.nablarch.dev.nablarch-sonarqube'
  plugin 'com.nablarch.dev.nablarch-maven-deploy'

  from 'https://github.com/nablarch/nablarch-gradle-plugin/blob/develop/scripts/cobertura/cobertura-0.0.1.gradle?raw=true'
}


sourceSets {
  main {
    java {
      srcDir "${projectDir}/main/java"
    }
    resources {
      srcDir "${projectDir}/main/resources"
    }
  }
  test {
    java {
      srcDir "${projectDir}/test/java"
    }
    resources {
      srcDirs "${projectDir}/test/resources"
      srcDirs "${projectDir}/test/java"
      srcDirs "${projectDir}/main/java"
    }
  }
}

dependencies {
  compile 'com.nablarch.profile:nablarch-web'
  compile 'com.nablarch.framework:nablarch-common-jdbc'
  compile 'com.nablarch.framework:nablarch-common-date'
  compile 'com.nablarch.framework:nablarch-common-idgenerator-jdbc'
  compile 'com.nablarch.framework:nablarch-mail-sender'
  compile 'com.nablarch.framework:nablarch-common-code-jdbc'

  testCompile 'com.nablarch.framework:nablarch-testing'
  
  // captha
  compile 'com.google.code:kaptcha:2.3.2'

  // JDBC Drivers
  testCompile (group: 'com.oracle', name: 'ojdbc6', version: '11.2.0.4.0')
  testRuntime (group: 'com.oracle', name: 'ucp', version: '11.2.0.3.0')
  
  // mail
  compile 'javax.mail:mailapi:1.4.3'
  testRuntime 'com.sun.mail:pop3:1.4.4'
  testRuntime 'com.sun.mail:smtp:1.4.4'

}


test {
  
  // find sql files
  classpath = files("${projectDir}/main/java") \
            + files("${projectDir}/test/java") \
            + project.sourceSets.test.runtimeClasspath
}

jar {
  // need sql files
  from("${projectDir}/main/java") {
    include '**/*.sql'
  }
}

wrapper {
  gradleVersion = '2.4'
}

sonarRunner {
  sonarProperties {
    property "sonar.exclusions", "**/*.java"
  }
}