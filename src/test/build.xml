<?xml version="1.0" encoding="UTF-8"?>
<project name="nablarch_biz_sample_test" default="test" basedir="">

    <property file="build.properties" />

    <path id="test.lib.path">
        <fileset dir="${test.lib.dir}">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <path id="test.tool.lib.path">
        <fileset dir="${test.tool.lib.dir}">
            <include name="tools.jar" />
        </fileset>
    </path>

    <path id="copied.main.lib.path">
        <fileset dir="${copied.main.lib.dir}">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <path id="cobertura.classpath">
        <fileset dir="${cobertura.dir}">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

    <target name="all"
            depends="clean,compile,instrument,test,coverage-report,findbugs" />

    <target name="clean">
        <delete dir="${test.target.dir}" />
        <delete file="cobertura.ser" />
        <delete dir="${instrumented.dir}" />
        <delete dir="${junit.report.dir}" />
        <delete dir="${cobertura.report.dir}" />
        <delete>
            <fileset dir="" includes="*.old" />
        </delete>
    </target>

    <target name="copy.main"
            description="テスト実行に必要なmainプロジェクトのリソースをbasedir配下にコピーする">
        <delete dir="${copied.main.dir}" />
        <mkdir dir="${copied.main.dir}" />
        <copy todir="${copied.main.src.dir}">
            <fileset dir="${main.src.dir}" />
        </copy>
        <copy todir="${copied.main.resource.dir}">
            <fileset dir="${main.resource.dir}" />
        </copy>
        <copy todir="${copied.main.target.dir}">
            <fileset dir="${main.target.dir}" />
        </copy>
        <copy todir="${copied.main.lib.dir}">
            <fileset dir="${main.lib.dir}" excludes="**/nablarch.jar" />
        </copy>
    </target>

    <target name="compile">
        <delete dir="${test.target.dir}" />
        <mkdir dir="${test.target.dir}" />
        <javac destdir="${test.target.dir}"
               srcdir="${test.src.dir}"
               includes="**/*.java"
               debug="${debug}"
               failonerror="yes"
               encoding="${src.encoding}"
               includeantruntime="no">
            <classpath>
                <path refid="test.lib.path" />
                <path refid="copied.main.lib.path" />
            </classpath>
            <classpath location="${copied.main.target.dir}" />
        </javac>
    </target>

    <target name="instrument" description="テスト対象にカバレッジ測定用コードを埋め込む">
        <delete file="cobertura.ser" />
        <delete dir="${instrumented.dir}" />
        <mkdir dir="${instrumented.dir}" />
        <cobertura-instrument todir="${instrumented.dir}">
            <fileset dir="${copied.main.target.dir}">
                <include name="**/*.class" />
            </fileset>
        </cobertura-instrument>
    </target>

    <target name="test" depends="compile, instrument">
        <delete dir="${junit.report.dir}" />
        <mkdir dir="${junit.report.dir}" />
        <junit fork="yes"
               printsummary="yes"
               dir="${basedir}"
               haltonerror="${haltonfailure}"
               haltonfailure="${haltonfailure}" forkmode="once">

          <!-- Hereis はシステムが使用する文字エンコーディングにより実行結果が変わるため、強制指定する。 -->
          <sysproperty key="file.encoding" value="UTF-8" />

          <sysproperty key="user.language" value="ja" />
          <sysproperty key="user.region" value="JP" />

          <classpath location="${test.src.dir}" />
          <classpath location="${test.target.dir}" />
          <classpath path="${test.resource.dir}" />

          <classpath refid="cobertura.classpath" />
          <classpath location="${instrumented.dir}" />
          <classpath location="${copied.main.target.dir}" />
          <classpath location="${copied.main.src.dir}" />
          <classpath path="${copied.main.resource.dir}" />
          <classpath>
            <path refid="test.lib.path" />
            <path refid="test.tool.lib.path" />
            <path refid="copied.main.lib.path" />
          </classpath>
          <formatter type="xml" />
          <batchtest fork="yes" todir="${junit.report.dir}">
              <fileset dir="${test.target.dir}"
                       includes="${unitTest.test.dir.include}"
                       excludes="${unitTest.test.dir.exclude}" />
          </batchtest>
        </junit>
        <junitreport>
            <fileset dir="${junit.report.dir}">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="${junit.report.dir}/html" />
        </junitreport>
    </target>

    <target name="coverage-report" depends="test">
        <delete dir="${cobertura.report.dir}" />
        <mkdir dir="${cobertura.report.dir}" />
        <cobertura-report format="xml"
                          destdir="${cobertura.report.dir}"
                          srcdir="${copied.main.src.dir}"
                          encoding="${src.encoding}" />
    </target>

    <target name="findbugs" depends="compile">
        <taskdef name="findBugs"
                 classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
                 classpath="${findbugs.lib.dir}/findbugs-ant.jar"/>
        <delete dir="${findbugs.report.dir}"/>
        <mkdir dir="${findbugs.report.dir}"/>
        <findBugs home="${findbugs.lib.dir}"
                  output="xml"
                  outputFile="${findbugs.report.dir}/${findbugs.report.file}"
                  jvmargs="-Xms512M -Xmx512M"
                  includeFilter="${findbugs.include.filter}">
            <class location="${test.target.dir}"/>
            <auxClasspath>
                <path refid="test.lib.path" />
                <path refid="copied.main.lib.path" />
                <path refid="test.tool.lib.path" />
            </auxClasspath>
            <auxClasspath>
                <path location="${copied.main.target.dir}" />
            </auxClasspath>
            <sourcePath path="${test.src.dir}"/>
            <systemProperty name="nablarch-findbugs-config" value="${findbugs.published.config}" />
        </findBugs>
    </target>

</project>

