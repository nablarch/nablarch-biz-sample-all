<?xml version="1.0" encoding="UTF-8"?>
<component-configuration xmlns="http://tis.co.jp/nablarch/component-configuration"
                         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                         xsi:schemaLocation="http://tis.co.jp/nablarch/component-configuration https://nablarch.github.io/schema/component-configuration.xsd">

  <!-- ダイアレクト設定 -->
  <!-- 使用するDBに合わせてダイアレクトを設定すること -->
  <component name="dialect" class="nablarch.core.db.dialect.H2Dialect" />

  <component name="transactionFactory" class="nablarch.core.db.transaction.JdbcTransactionFactory" />
  <component class="nablarch.core.db.statement.exception.BasicSqlStatementExceptionFactory" />
  <component name="connectionFactory" class="nablarch.core.db.connection.BasicDbConnectionFactoryForDataSource">
    <property name="dialect" ref="dialect" />
    <property name="dataSource">
      <component class="org.h2.jdbcx.JdbcDataSource">
        <property name="user" value="sa" />
        <property name="password" value="" />
        <property name="URL" value="jdbc:h2:~/nablarch_test" />
      </component>
    </property>
  </component>

  <!-- ファイル管理機能(論理名fileManagementのコンポーネントを、FileManagementUtilクラスが使用する) -->
  <component name="fileManagement" class="please.change.me.common.file.management.DbFileManagement">
    <!-- 格納ファイルの最大長(単位：バイト) -->
    <property name="maxFileSize" value="10000000"/>
    <!-- 採番機能で、DbFileManagement用の採番である旨を識別するためのKey -->
    <property name="fileIdKey" value="1103" />
    <!-- 採番機能 -->
    <property name="idGenerator" ref="mockIdGenerator" />
    <!-- 採番時に使用するフォーマッター -->
    <property name="idFormatter" ref="fileManagementFormatter" />
  </component>

  <!-- 採番機能(ユニットテスト用) -->
  <component name="mockIdGenerator" class="please.change.me.common.file.management.DbFileManagementTest$MockIdGenerator">
  </component>

  <!-- 採番時に使用するフォーマッター(ファイル管理機能から使用) -->
  <component name="fileManagementFormatter" class="nablarch.common.idgenerator.formatter.LpadFormatter">
    <!-- 桁数 -->
    <property name="length" value="18" />
    <!-- 不足している桁を埋める文字 -->
    <property name="paddingChar" value="0" />
  </component>

  <component name="statementFactory" class="nablarch.core.db.statement.BasicStatementFactory">
    <property name="sqlLoader">
      <component name="sqlLoader" class="nablarch.core.db.statement.BasicSqlLoader">
        <property name="fileEncoding" value="utf-8" />
        <property name="extension" value="sql" />
      </component>
    </property>
  </component>

  <component name="dbManager" class="nablarch.core.db.transaction.SimpleDbTransactionManager" >
    <property name="dbTransactionName" value="subTran"/>
    <property name="transactionFactory" ref="transactionFactory" />
    <property name="connectionFactory" ref="connectionFactory" />
  </component>

  <component name="daoContextFactory" class="nablarch.common.dao.BasicDaoContextFactory" />

</component-configuration>